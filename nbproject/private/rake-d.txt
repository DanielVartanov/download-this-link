audit\:actions=Print out controllers and their actions (use CONTROLLER=Foo,Bar to be selective)
audit\:controllers=Print out all controllers
audit\:routes=Print out the named and anonymous routes
db\:abort_if_pending_migrations=Raises an error if there are pending migrations
db\:charset=Retrieves the charset for the current environment's database
db\:collation=Retrieves the collation for the current environment's database
db\:create=Create the local database defined in config/database.yml for the current Merb.environment
db\:create\:all=Create all the local databases defined in config/database.yml
db\:drop=Drops the database for the current environment (set MERB_ENV to target another environment)
db\:drop\:all=Drops all the local databases defined in config/database.yml
db\:fixtures\:load=Load fixtures into the current environment's database.  Load specific fixtures using FIXTURES=x,y
db\:merb_start=
db\:migrate=Migrate the database through scripts in schema/migrations. Target specific version with VERSION=x
db\:migrate\:redo=Rollbacks the database one migration and re migrate up. If you want to rollback more than one step, define STEP=x
db\:migrate\:reset=Resets your database using your migrations for the current environment
db\:reset=Drops and recreates the database from db/schema.rb for the current environment.
db\:rollback=Rolls the schema back to the previous version. Specify the number of steps with STEP=n
db\:schema\:dump=Create a schema/schema.rb file that can be portably used against any DB supported by AR
db\:schema\:load=Load a schema.rb file into the database
db\:sessions\:clear=Clear the sessions table
db\:structure\:dump=Dump the database structure to a SQL file
db\:test\:clone=Recreate the test database from the current environment's database schema
db\:test\:clone_structure=Recreate the test databases from the development structure
db\:test\:prepare=Prepare the test database and load the schema
db\:test\:purge=Empty the test database
db\:version=Retrieves the current schema version number
default=Default: run spec examples
merb_env=Start runner environment
spec=Run specs, run a specific spec with TASK=spec/path_to_spec.rb
spec\:clobber=
spec\:clobber_coverage=Remove rcov products for coverage
spec\:controller=Run all controller specs, run a spec for a specific Controller with CONTROLLER=MyController
spec\:coverage=Run specs and check coverage with rcov
spec\:default=Run specs
spec\:html=Run all specs and output the result in html
spec\:model=Run all model specs, run a spec for a specific Model with MODEL=MyModel
spec\:request=Run all request specs, run a spec for a specific Request with REQUEST=MyRequest
spec\:view=Run all view specs, run specs for a specific controller (and view) with CONTROLLER=MyController (VIEW=MyView)
stats=Lines of code statistics
